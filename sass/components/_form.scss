.form {

    &__group:not(:last-child) {
        margin-bottom: 2rem;   
    }
    
    &__input {
        font-family: inherit;  //CCC:basically input doesnt automatically inherit font-properties so we use this to force inheritance of the set font-family from the body ancestor element 
        color: inherit;
        font-size: 1.5rem;
        border: none;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .7);
        display: block;
        width: 90%;
        border-bottom: 3px solid transparent;  //CCC:the border here was not originally meant to be. We want a border bottom of 3px green when the input is focused. But this pushes the 2nd lower input by the 3px border added on focus. So the border is added from the onset and made transparent then made green on focus.
        padding-top: 1.8rem;   //to make up for the now added 3px border-bottom at the top
        transition: all .2s;

        @include respond(tab-port) {
            width: 100%;
        }

        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
    
            &:invalid {  //CCC:.form__input:focus:invalid --> no input name(since its required) while submitting OR an invalid mail format
                border-bottom: 3px solid $color-secondary-dark;
            }

            &:valid {
                border-bottom: 3px solid $color-primary;
            }
        }

        &::placeholder {  //style the placeholder text
            color: $color-grey-dark-2;
        }

        &:placeholder-shown + .form__label { //when place-holder of input is shown(i.e we have no input/havent written anything) move label up by 4rem and make it invisible
            opacity: 0;    
            transform: translateY(-4.5rem);
        }
    }

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        display: inline-block;
        margin-top: .7rem;
        transition: all .3s;
    }

    &__radio-group {
        display: inline-block;
        width: 49%;    

        @include respond(phone) {
            width: 100%;
            margin-bottom: 2rem;
        }
    }

    &__radio-input {
        display: none;

        &:checked + .form__radio-label .form__radio-button::after { //as soon as we click on either the span radio-button or the label text (both which are inside the "for" Label of the radio-input), they both trigger the checked(or unchecked) state of the normal radio-input (due to for-->id link up). So now the created inner radio(radio-button::after) is visible when the input is checked vis-vis 
            opacity: 1;
        }
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4.2rem;
    }

    &__radio-button {
        display: inline-block;
        width: 3rem;
        height: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        position: absolute;
        left: 0;
        top: -.6rem;

        &::after {
            content: "";
            display: block;
            width: 1.3rem;
            height: 1.3rem;
            border-radius: 50%;
            @include absCenter;
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }
}
